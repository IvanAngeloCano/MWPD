/**
 * Auto Document Opener
 * This script automatically opens documents that are generated by the system
 * Enhanced version with better DOCX handling
 */
document.addEventListener('DOMContentLoaded', function() {
  // Check if there's a document to open from session storage or PHP session
  const documentToOpen = sessionStorage.getItem('open_document');
  const documentType = sessionStorage.getItem('document_type');
  
  if (documentToOpen) {
    console.log('Opening document:', documentToOpen);
    
    // Create a notification to inform the user
    showNotification('Document is being prepared for download...', 'info');
    
    setTimeout(function() {
      // Use a different approach for DOCX files
      if (documentType === 'docx') {
        console.log('Processing DOCX download for:', documentToOpen);
        
        // Method 1: Direct download link click (most compatible)
        const link = document.createElement('a');
        link.href = documentToOpen;
        link.download = documentToOpen.split('/').pop() || 'document.docx';
        link.style.display = 'none';
        document.body.appendChild(link);
        link.click();
        
        // Wait a moment before removing the link
        setTimeout(() => {
          document.body.removeChild(link);
          
          // Backup method: Use iframe as fallback if download doesn't start
          setTimeout(() => {
            // Create a hidden iframe that will trigger download
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = documentToOpen;
            document.body.appendChild(iframe);
            
            // Remove iframe after a short delay
            setTimeout(() => {
              try { document.body.removeChild(iframe); } catch(e) { console.log('Iframe already removed'); }
            }, 5000);
            
            showNotification('Document download initiated', 'success');
          }, 2000);
        }, 1000);
      } else {
        // For other files like PDFs, just open in a new tab
        window.open(documentToOpen, '_blank');
      }
      
      // Clear the session storage so it doesn't open again on refresh
      sessionStorage.removeItem('open_document');
      sessionStorage.removeItem('document_type');
    }, 1000); // Small delay to ensure the page is fully loaded
  }
});

/**
 * Shows a notification to the user
 */
function showNotification(message, type = 'info') {
  // Check if notification-container exists, if not create it
  let container = document.getElementById('notification-container');
  if (!container) {
    container = document.createElement('div');
    container.id = 'notification-container';
    container.style.position = 'fixed';
    container.style.top = '10px';
    container.style.right = '10px';
    container.style.zIndex = '9999';
    document.body.appendChild(container);
  }
  
  // Create notification element
  const notification = document.createElement('div');
  notification.className = 'notification ' + type;
  notification.style.backgroundColor = type === 'success' ? '#4CAF50' : '#2196F3';
  notification.style.color = 'white';
  notification.style.padding = '15px';
  notification.style.marginBottom = '10px';
  notification.style.borderRadius = '4px';
  notification.style.boxShadow = '0 2px 4px rgba(0,0,0,0.2)';
  notification.style.minWidth = '250px';
  notification.textContent = message;
  
  // Add close button
  const closeBtn = document.createElement('span');
  closeBtn.innerHTML = '&times;';
  closeBtn.style.float = 'right';
  closeBtn.style.cursor = 'pointer';
  closeBtn.style.marginLeft = '10px';
  closeBtn.onclick = function() {
    container.removeChild(notification);
  };
  notification.appendChild(closeBtn);
  
  // Add to container
  container.appendChild(notification);
  
  // Auto remove after 5 seconds
  setTimeout(function() {
    if (container.contains(notification)) {
      container.removeChild(notification);
    }
  }, 5000);
}
